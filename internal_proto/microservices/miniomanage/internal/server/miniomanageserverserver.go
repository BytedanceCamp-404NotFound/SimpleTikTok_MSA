// Code generated by goctl. DO NOT EDIT.
// Source: miniomanage.proto

package server

import (
	"context"

	"SimpleTikTok/internal_proto/microservices/miniomanage/internal/logic"
	"SimpleTikTok/internal_proto/microservices/miniomanage/internal/svc"
	"SimpleTikTok/internal_proto/microservices/miniomanage/types/MinioManageServer"
)

type MinioManageServerServer struct {
	svcCtx *svc.ServiceContext
	MinioManageServer.UnimplementedMinioManageServerServer
}

func NewMinioManageServerServer(svcCtx *svc.ServiceContext) *MinioManageServerServer {
	return &MinioManageServerServer{
		svcCtx: svcCtx,
	}
}

// 文件上传
func (s *MinioManageServerServer) PutFileUploader(ctx context.Context, in *MinioManageServer.PutFileUploaderRequest) (*MinioManageServer.PutFileUploaderResponse, error) {
	l := logic.NewPutFileUploaderLogic(ctx, s.svcCtx)
	return l.PutFileUploader(in)
}

// byte形式文件上传
func (s *MinioManageServerServer) PutFileUploaderByte(ctx context.Context, in *MinioManageServer.PutFileUploaderByteRequest) (*MinioManageServer.PutFileUploaderByteponse, error) {
	l := logic.NewPutFileUploaderByteLogic(ctx, s.svcCtx)
	return l.PutFileUploaderByte(in)
}

// 文件下载
func (s *MinioManageServerServer) GetFileUploader(ctx context.Context, in *MinioManageServer.GetMinioConnectRequest) (*MinioManageServer.GetMinioConnectResponse, error) {
	l := logic.NewGetFileUploaderLogic(ctx, s.svcCtx)
	return l.GetFileUploader(in)
}
