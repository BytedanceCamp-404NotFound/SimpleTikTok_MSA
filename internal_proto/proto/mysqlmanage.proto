syntax = "proto3";

package mysqlmanageserver;
  
// protoc-gen-go 版本大于1.4.0, proto文件需要加上go_package,否则无法生成
option go_package = "./mysqlmanageserver";

// message CommentUser struct {
// 	UserId        int64  `gorm:"column:user_id"        json:"id"               form:"user_id"        bson:"user_id"`
// 	Name          string `gorm:"column:user_nick_name" json:"name"             form:"name"           bson:"name"`
// 	FollowCount   int64  `gorm:"column:follow_count"   json:"follow_count"     form:"follow_count"   bson:"follow_count"`
// 	FollowerCount int64  `gorm:"column:follower_count" json:"follower_count"   form:"follower_count" bson:"follower_count"`
// 	IsFollow      bool   `json:"is_follow"             form:"is_follow"        bson:"is_follow"`
// }

message CommentGetUserByUserIdRequest {
    int32 userId = 1;
}
  
message CommentGetUserByUserIdResponse {
    // CommentUser gender = 1;
    string error = 2;
}


message FavoriteVideoNumRequest {
    int32 userId = 1;
}
  
message FavoriteVideoNumResponse {
    // CommentUser gender = 1;
    string error = 2;
}
  
message UserLoginRequest {
    string username = 1;
    string password = 2;
}

message UserLoginResponse {
    int32 userId = 1;
}

message UserRegisterRequest {
    string username = 1;
    string password = 2;
}

message UserRegisterResponse {
    int32 userId = 1;
}
  
service MySQLManageServer {
    // 1
    rpc CommentGetUserByUserId(CommentGetUserByUserIdRequest) returns(CommentGetUserByUserIdResponse);
    // 2
    rpc FavoriteVideoNum(FavoriteVideoNumRequest) returns(FavoriteVideoNumResponse);
    // 用户登陆校验
    rpc UserLogin(UserLoginRequest) returns(UserLoginResponse);
    // 用户注册
    rpc UserRigster(UserRegisterRequest) returns(UserRegisterResponse);
}